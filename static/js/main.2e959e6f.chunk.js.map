{"version":3,"sources":["EtText.jsx","Header.jsx","inventory/CategoryItemsTable.jsx","products/util.js","assets/strings/TeakInfo.js","inventory/info/CenteredImage.jsx","inventory/info/InfoTexts.jsx","inventory/info/TeakInfo.jsx","assets/strings/MahognyInfo.js","inventory/info/MahognyInfo.jsx","assets/strings/SteamWoodInfo.js","assets/strings/PlywoodInfo.js","assets/strings/FanerInfo.js","inventory/info/index.js","inventory/info/SteamWoodInfo.jsx","inventory/info/PlywoodInfo.jsx","inventory/info/FanerInfo.jsx","inventory/info/StainlessInfo.jsx","assets/strings/StainlessInfo.js","inventory/CategoryBreadcrumb.jsx","inventory/Inventory.jsx","assets/strings/Home.js","Home.jsx","assets/strings/PriceLists.js","PriceLists.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["EtText","children","rest","style","fontFamily","margin","Header","history","useHistory","navigateTo","url","replace","display","flexDirection","alignItems","padding","preview","width","src","onClick","cursor","justifyContent","marginTop","type","icon","TagOutlined","DollarOutlined","MailOutlined","window","location","href","columns","dataIndex","render","_","record","imagePath","height","fallback","title","CategoryItemsTable","rootCategory","subCategory","products","jsonInventory","Object","values","reduce","currentItems","rootCategoryObject","rootCategoryItems","subCategoryItems","paddingBottom","length","pagination","bordered","dataSource","urlLabelTranslationJson","require","_translateValue","value","from","to","matchingTranslation","find","translation","getPath","advantages","header","body","bulletPoints","origins","deforestation","CenteredImage","TextWithMargin","text","MaroonHeader","color","BulletList","numbered","startFrom","ListComponent","start","paddingLeft","map","bulletPoint","index","TeakInfo","marginBottom","introductionParagraphs","MahognyInfo","paragraph","production","paragraphs","processing","treatment","usageAreas","examples","teakPlywood","mahognyPlywood","meranti","merantiProducts","khaya","khayaProducts","deckPlywood","additionalInfo","durkPlywood","glue","cherryPlywood","oakPlywood","beechPlywood","walnutPlywood","fanerRemoval","steps","gluePreparation","gluing","postProcessing","surfaceTreatment","InfoPages","Teak","Mahogny","SteamWood","RightCircleOutlined","marginLeft","fontSize","example","textAlign","Plywood","alignContent","Fan√©r","Rostfritt","_toCapitalCase","s","charAt","toUpperCase","substring","CategoryBreadcrumb","paddingTop","Item","SubMenu","Menu","MenuOption","menuText","linkTo","InfoWrapper","Inventory","match","params","rootCategoryPath","subCategoryPath","getCategoriesFromPath","InfoComponent","mode","keys","bodyParagraphs","Home","fontWeight","priceLists","listItems","label","brochures","PriceLists","listItem","open","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e959e6f.chunk.js","sourcesContent":["import React from 'react'\n\nconst EtText = ({ children, ...rest }) => {\n  return (\n    <p {...rest} style={{ fontFamily: 'MyFont', margin: 0, ...rest.style }}>\n      {children}\n    </p>\n  )\n}\n\nexport default EtText\n","import React from 'react'\nimport { Image, Button } from 'antd'\nimport { TagOutlined, DollarOutlined, MailOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router-dom'\nimport EtText from './EtText.jsx'\n\nconst Header = () => {\n  const history = useHistory()\n  const navigateTo = (url) => () => history.replace(url)\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '1em' }}>\n      <div>\n        <Image\n          preview={false}\n          width={500}\n          src='http://www.erlandsson-trade.se/images/erlandsontrade.JPG'\n          onClick={navigateTo('/')}\n          style={{ cursor: 'pointer' }}\n        />\n        <div\n          style={{ display: 'flex', justifyContent: 'space-between', marginTop: '1em', width: 500 }}\n        >\n          <Button\n            type='text'\n            icon={<TagOutlined />}\n            onClick={navigateTo('/varor')}\n            style={{ padding: 0 }}\n          >\n            <EtText>Varor</EtText>\n          </Button>\n          <Button\n            type='text'\n            icon={<DollarOutlined />}\n            onClick={navigateTo('/prislistor')}\n            style={{ padding: 0 }}\n          >\n            <EtText>Prislistor</EtText>\n          </Button>\n          <Button\n            type='text'\n            icon={<MailOutlined />}\n            onClick={() => (window.location.href = `mailto:info@erlandson-trade.se`)}\n            style={{ padding: 0 }}\n          >\n            <EtText>Kontakt</EtText>\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport jsonInventory from '../products/inventory.json'\nimport { Table, Image } from 'antd'\n\nconst columns = [\n  {\n    dataIndex: 'imagePath',\n    render: (_, record) => {\n      return (\n        <>\n          {record.imagePath ? (\n            <Image\n              preview={false}\n              width={'250px'}\n              height={'250px'}\n              fallback='http://www.erlandsson-trade.se/images/erlandsontrade.jpg'\n              src={`http://www.erlandsson-trade.se/images/${record.imagePath}.jpg`}\n            />\n          ) : null}\n        </>\n      )\n    },\n  },\n  {\n    title: 'Produktnamn',\n    dataIndex: 'headline',\n  },\n  {\n    title: 'Produktbeskrivning',\n    dataIndex: 'body',\n  },\n  {\n    title: 'Artikelnummer',\n    dataIndex: 'articleId',\n  },\n]\n\nconst _getAllInventoryItems = () =>\n  Object.values(jsonInventory).reduce(\n    (currentItems, rootCategoryObject) => [\n      ...currentItems,\n      ...Object.values(rootCategoryObject).reduce(\n        (rootCategoryItems, subCategoryItems) => [...rootCategoryItems, ...subCategoryItems],\n        []\n      ),\n    ],\n    []\n  )\n\nconst CategoryItemsTable = ({ rootCategory, subCategory }) => {\n  const products =\n    rootCategory && subCategory ? jsonInventory[rootCategory][subCategory] : _getAllInventoryItems()\n  return (\n    <div\n      style={{\n        width: '90%',\n        paddingBottom: '2em',\n      }}\n    >\n      {products && products.length ? (\n        <Table\n          pagination={false}\n          bordered\n          columns={columns}\n          dataSource={products}\n          style={{ marginTop: '1em' }}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default CategoryItemsTable\n","const urlLabelTranslationJson = require('./url_label_translation.json')\n\nconst _translateValue = ({ value, from, to }) => {\n  if (!value) return\n  const matchingTranslation = urlLabelTranslationJson.find(\n    (translation) => translation[from] === value\n  )\n  return matchingTranslation && matchingTranslation[to]\n}\n\nexport const getPath = ({ rootCategory, subCategory }) => {\n  return `${_translateValue({ value: rootCategory, from: 'label', to: 'url' })}/${_translateValue({\n    value: subCategory,\n    from: 'label',\n    to: 'url',\n  })}`\n}\n\nexport const getCategoriesFromPath = ({ rootCategoryPath, subCategoryPath }) => {\n  return {\n    rootCategory: _translateValue({ value: rootCategoryPath, from: 'url', to: 'label' }),\n    subCategory: _translateValue({ value: subCategoryPath, from: 'url', to: 'label' }),\n  }\n}\n","export const introduction =\n  'Teak (Tectona grandis), \"Kungen av tr√§dslag\", √§r f√∂r utomhus- och marint bruk ett enast√•ende material. Det finns m√•nga anv√§ndningsomr√•den f√∂r teak, men ytterst f√• alternativ. Teak har anv√§nts inom skeppsbyggnad och som konstruktionsmaterial i mer √§n 2000 √•r. Det finns exempel p√• indiska tempel med teakbj√§lkar som √§r mer √§n 1000 √•r som fortfarande √§r funktionella. D√§cket p√• Titanic var av teak och har vid dykningar visat sig vara i samma goda skick som n√§r hon sj√∂nk 15 april 1912.'\n\nexport const advantages = {\n  header: 'F√∂rdelar',\n  body:\n    'Teak har f√∂rm√•ga att utveckla en silvergr√• yta som ger s√•v√§l en vacker patina som ett fullgott skydd mot v√§drets makter. Den √§r formstabilt och inte ben√§get att spricka, varf√∂r det kan l√§mnas ute eller i fuktiga milj√∂er utan ytbehandling. Med dess slitstyrka och naturliga, skyddande oljor har teak, f√∂rutom ett vackert utseende, √§ven f√∂ljande f√∂rdelar',\n  bulletPoints: [\n    'mycket l√•ng livsl√§ngd',\n    'litet eller inget underh√•llskrav',\n    'motst√•ndskraftighet mot fukt och (havs-)vatten',\n    'UV-t√•lighet',\n    'l√•g utvidgningskoefficient, varf√∂r tr√§et √§r formstabilt i s√•v√§l v√§rme som fukt och kyla',\n    'h√∂g kiselhalt, varf√∂r tr√§et inte blir halt att g√• p√• d√• bl√∂tt',\n    'korrosionsf√∂rhindrande egenskaper f√∂r j√§rn',\n  ],\n}\n\nexport const origins = {\n  header: 'Ursprung',\n  body:\n    'V√•r teak h√§rstammar fr√•n Burma (Myanmar), som st√•r f√∂r ca 80% av exporten av naturlig teak i v√§rlden. Teak √§r inget regnskogstr√§d, utan v√§xer glest i blandad l√∂vskog. Normalt √•terfinns endast 1 till 5 tr√§d per tunnland (~5000 kvm), men Burma etablerade f√∂rutseende nog teakplantager redan 1856 som svar p√• framtida efterfr√•gan. Plantagerna √§r noggrannt kontrollerade f√∂r dess stora ekologiska och ekonomiska betydelse. Teakplantor fr√•n Burma har √§ven anv√§nts f√∂r att starta plantager i Afrika och Central Amerika. M√•nga f√∂retag och privatpersoner har investerat i plantager i milj√∂h√§nseende och vinstintresse.',\n}\n\nexport const deforestation = {\n  header: 'Avverkning',\n  body:\n    'I Burma anv√§nds fortfarande elefanter f√∂r transport av avverkat virke, d√• dessa har en betydligt mindre milj√∂p√•verkan √§n tunga skogsmaskiner',\n}\n","import React from 'react'\nimport { Image } from 'antd'\n\nconst CenteredImage = ({ src }) => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <Image\n        preview={false}\n        fallback='http://www.erlandsson-trade.se/images/erlandsontrade.jpg'\n        src={src}\n      />\n    </div>\n  )\n}\n\nexport default CenteredImage\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\n\nexport const TextWithMargin = ({ text }) => <EtText style={{ margin: '1em 0 0 0' }}>{text}</EtText>\n\nexport const MaroonHeader = ({ text, style }) => (\n  <EtText style={{ margin: '1em 0 0 0', color: '#C0392B', ...style }}>{text}</EtText>\n)\n\nexport const BulletList = ({ bulletPoints, numbered, startFrom }) => {\n  const ListComponent = ({ children, ...rest }) =>\n    numbered ? (\n      <ol start={startFrom || 1} {...rest}>\n        {children}\n      </ol>\n    ) : (\n      <ul {...rest}>{children}</ul>\n    )\n  return (\n    <ListComponent style={{ paddingLeft: '1.5em' }}>\n      {bulletPoints.map((bulletPoint, index) => {\n        return (\n          <li key={index}>\n            <EtText>{bulletPoint}</EtText>\n          </li>\n        )\n      })}\n    </ListComponent>\n  )\n}\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\nimport { introduction, advantages, origins, deforestation } from '../../assets/strings/TeakInfo'\nimport CenteredImage from './CenteredImage.jsx'\nimport { TextWithMargin, MaroonHeader, BulletList } from './InfoTexts.jsx'\n\nconst TeakInfo = () => {\n  return (\n    <div style={{ marginBottom: '1em' }}>\n      <CenteredImage src='http://www.erlandson-trade.se/images/teakleaves.gif' />\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <TextWithMargin text={introduction} />\n        <MaroonHeader text={advantages.header} />\n        <EtText>{advantages.body}</EtText>\n        <BulletList bulletPoints={advantages.bulletPoints} />\n        <MaroonHeader text={origins.header} />\n        <EtText>{origins.body}</EtText>\n        <MaroonHeader text={deforestation.header} />\n        <EtText>{deforestation.body}</EtText>\n      </div>\n    </div>\n  )\n}\n\nexport default TeakInfo\n","export const introductionParagraphs = [\n  'Namnet Mahogny anv√§ndes f√∂rst i v√§stv√§rlden f√∂r tre tr√§dslag av genuset Swietenia, n√§mligen S. mahogoni (V√§stindisk Mahogny) fr√•n Karribien, S. macrophylla (Honduras Mahogny) fr√•n Central- och Sydamerika, och S. humilis fr√•n Stillahavskusten av Mexiko och Centralamerika. Sedemera innefattades √§ven virke fr√•n relaterade tr√§dslag under begreppet Mahogny, s√•som det afrikanska Entandophragma (Guarea och Khaya) och det asiatiska Toona.',\n  'Mahognyns frukter anv√§ndes tidigare av aztekerna som olja i kosmetika, men virket n√•dde enligt s√§gen Europa f√∂rst efter att en snickare p√• Sir Walter Raleighs skepp 1595 uppm√§rksammat virkets sk√∂nhet och tillverkat ett bord som sk√§nktes till Englands drottning Elizabeth I.',\n  'Mahognyn anv√§nds idag framf√∂rallt till m√∂bler och b√•tinredning pga sin l√§ttbearbarhet, vackra r√∂da lyster, f√∂rm√•ga att motst√• termiter.. och vatten.',\n]\n\nexport const advantages = {\n  header: 'F√∂rdelar',\n  body:\n    'Mahognyn f√•r obehandlad en sidenmatt gr√•- till r√∂dtonad f√§rg som √§ven obehandlad motst√•r fukt och v√§ta bra. Dock lackas eller oljas oftast virket f√∂r att f√• fram och beh√•lla dess vackra r√∂da nyans. F√∂ljande ytterligare kar√§kt√§rsdrag kan sk√∂njas hos mahogny',\n  bulletPoints: [\n    'formstabilt och inte ben√§get att spricka, √§ven i fuktiga milj√∂er utan ytbehandling',\n    'resistent mot r√∂ta, f√∂rruttnelse och insektsangrepp',\n    'l√•ng livsl√§ngd',\n    'l√§ttbearbetat',\n    'l√•ga underh√•llskrav',\n  ],\n}\n\nexport const origins = {\n  header: 'Ursprung',\n  body:\n    'Vi har p√• lager s√•v√§l Honduras som Asiatisk och Afrikansk mahogny fr√•n certifierade leverant√∂rer.',\n}\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\nimport { introductionParagraphs, advantages, origins } from '../../assets/strings/MahognyInfo'\nimport CenteredImage from './CenteredImage.jsx'\nimport { TextWithMargin, MaroonHeader, BulletList } from './InfoTexts.jsx'\n\nconst MahognyInfo = () => {\n  return (\n    <div style={{ marginBottom: '1em' }}>\n      <CenteredImage src='http://www.erlandson-trade.se/images/mahogany.JPG' />\n      {introductionParagraphs.map((paragraph, index) => (\n        <TextWithMargin key={index} text={paragraph} />\n      ))}\n      <MaroonHeader text={advantages.header} />\n      <EtText>{advantages.body}</EtText>\n      <BulletList bulletPoints={advantages.bulletPoints} />\n      <MaroonHeader text={origins.header} />\n      <EtText>{origins.body}</EtText>\n    </div>\n  )\n}\n\nexport default MahognyInfo\n","export const introduction =\n  'SteamWood¬Æ best√•r av Europeisk Ask, som efter v√§rme- och √•ngbehandling erh√•ller en homogent gyllene m√∂rk nyans med mycket god best√§ndighet mot fukt och r√∂ta. Vid utomhusbruk f√•r tr√§et obehandlat efterhand en silvergr√• patina. Vid behandling med olja (rekommenderas), beh√•ller tr√§et sin m√∂rka nyans.'\n\nexport const advantages = {\n  header: 'F√∂rdelar',\n  body:\n    'SteamWood¬Æ (SW) √§r ett gott alternativ till teak och uppn√•r motsvarande best√§ndighet mot vatten, fukt och r√∂ta som teak. Tester utf√∂rda bland annat vid Universitetet i Dresden har p√•visat att Steamwood¬Æ uppn√•r samma motst√•ndskraft (Class 1 durability) som teak vad avser fukt och r√∂ta. SW √§r milj√∂v√§nligt och kan erh√•llas med FSC-m√§rkning.',\n}\n\nexport const production = {\n  header: 'Tillverkning',\n  paragraphs: [\n    'SW tillverkas av Europeisk Ask som behandlas under intensiv v√§rme upp till 200¬∞C i fuktig milj√∂. Ju h√∂gre temperatur man behandlar tr√§et med, desto m√∂rkare blir tr√§ets nyans, men samtidigt √∂kar ocks√• dess spr√∂dhet. Tillverkningsprosessen tillf√∂r inga tillsatser, varken naturliga eller kemiska, utan best√•r endast av v√§rmebehandling under tillf√∂rsel av fukt i form av vatten√•nga.',\n    'Behandlingen medf√∂r, f√∂rutom att tr√§et m√∂rknar och att dess cellers m√∂jlighet att ta upp fukt minskar, √§ven att tr√§ets f√∂rm√•ga att motst√• r√∂ta f√∂rb√§ttras. Resultatet f√•r egenskaper som normalt bara √•terfinns i tropiska tr√§dslag - ett vackert motst√•ndskraftigt tr√§dslag med god formstabilitet.',\n  ],\n}\n\nexport const processing = {\n  header: 'Bearbetning och n√•tning',\n  body:\n    'SW √§r l√§ttbearbetat och har en homogen nyans genom hela tr√§et. D√• det √§r mycket h√•rt rekommenderas t√§ttandade (h√•rdmetall)sk√§r. N√•tning av SW genomf√∂rs i enlighet med teakn√•tning.',\n}\n\nexport const treatment = {\n  header: 'Behandling',\n  body:\n    'SW rekomenderas en √•rlig reng√∂ring och behandling med tr√§olja, f√∂retr√§desvis teakolja, f√∂r att beh√•lla sina goda vatten- och r√∂tbest√§ndiga egenskaper. Vidare beh√•ller det sin m√∂rka nyans vid behandling med olja.',\n}\n\nexport const products = {\n  header: 'Produkter',\n  body:\n    'Erlandson Trade saluf√∂r f√∂r n√§rvarande SteamWood¬Æ som d√§cksribb 40 x 12mm (1190) samt mittfisk 12 x 95mm (1192), 12 x 120mm (1194) och 12 x 145 (1196)',\n}\n\nexport const usageAreas = {\n  header: 'Anv√§ndningsomr√•den',\n  body:\n    'SW uppn√•r ej en h√∂gre fukthalt √§n 15-16%. Detta √§r en stor f√∂rdel vid extri√∂rt och marint bruk. SW nyttjas bl a som material vid utomhusm√∂bler och utomhusgolv. B√•tindustrien har med mycket goda resultat nyttjat SW som b√•td√§cks- och b√•tinredningsmaterial.',\n  examples: [\n    {\n      title: 'Maritime M√∏bler AS:',\n      src: 'http://www.erlandson-trade.se/images/Maritime.jpg',\n    },\n    {\n      title: 'Askeladden (d√§cksmaterial, badplattform)',\n      src: 'http://www.erlandson-trade.se/images/Askeladden2.jpg',\n    },\n    {\n      title: 'Windy boats, d√§cksmaterial',\n      src: 'http://www.erlandson-trade.se/images/Windy1.jpg',\n    },\n    {\n      title: 'Windy boats, interi√∂r',\n      src: 'http://www.erlandson-trade.se/images/Windy2.jpg',\n    },\n    {\n      title: 'Vestadmyr (landg√•ngar)',\n      src: 'http://www.erlandson-trade.se/images/Vestadmyr1.jpg',\n    },\n    {\n      title: 'Princess Yachts och Sunseeker Yachts (d√§cksmaterial)',\n      src: 'http://www.erlandson-trade.se/images/Princess1.jpg',\n    },\n    {\n      title: 'Princess Yachts och Sunseeker Yachts (interi√∂r)',\n      src: 'http://www.erlandson-trade.se/images/Princess2.jpg',\n    },\n  ],\n}\n","export const introduction =\n  'Erlandson Trade avser att bli helt√§ckande inom plywood, s√§v√§l vad avser olika tr√§slag som storlekar (hel- och kvartsskivor) och tjocklekar. F√∂r n√§rvarande har vi f√∂ljande kvaliteter p√• lager: [Helskiva = 2440x1220 mm, Kvartsskiva = 1220x610 mm]'\n\nexport const teakPlywood = {\n  header: 'Teakplywood',\n  products: [\n    '1-SIDIG HEL- och KVARTSSKIVA (4, 6, 9 och 12 mm)',\n    '2-SIDIG HEL- och KVARTSSKIVA (6, 9, 12 och 15 mm)',\n  ],\n}\n\nexport const mahognyPlywood = {\n  header: 'Mahognyplywood',\n  meranti: 'Meranti (Luanaplywood)',\n  merantiProducts: ['1-SIDIG HEL*- och KVARTSSKIVA (4, 6*, 9*, 12, 15* och 18 mm)'],\n  khaya: 'Khaya',\n  khayaProducts: [\n    '1-SIDIG HEL- och KVARTSSKIVA (4 mm)',\n    '2-SIDIG HEL- och KVARTSSKIVA (6, 13 och 16 mm)',\n  ],\n}\n\nexport const deckPlywood = {\n  header: 'D√§cksplywood',\n  products: ['1-SIDIG HEL*- och KVARTSSKIVA (6, 12, 15 och 18* mm)'],\n  additionalInfo:\n    'D√§cksplywoodens randad av √∂msom teak- (40 mm) och √∂msom svart raminfan√©r (4 mm).',\n}\n\nexport const durkPlywood = {\n  header: 'Durkplywood',\n  products: ['1-SIDIG HEL*- och KVARTSSKIVA (6, 12, 15 och 18* mm)'],\n  additionalInfo: 'Durkplywoodens randad av √∂msom teak- (40 mm) och √∂msom vit kotofan√©r (4 mm).',\n}\n\nexport const glue = {\n  header: 'Lim',\n  body:\n    'Ovan plywood √§r WBP-limmad, vilket inneb√§r att den √§r limmad med ett vattenbest√§ndigt lim. Sj√§lva limmet t√•l d√§rmed vatten, men tr√§et i sig √§r √§nd√• mottagligt f√∂r v√§ta. D√§rf√∂r b√∂r plywood som ska anv√§ndas utomhus eller i fuktig milj√∂ √•tminstone behandlas med en bra tr√§olja, men helst lackas.Speciellt viktigt √§r att f√∂rsegla (lacka) plywoodens kanter.',\n}\n\nexport const cherryPlywood = {\n  header: 'K√∂rsb√§rsplywood',\n  products: ['1-SIDIG HEL- och KVARTSSKIVA (4 mm)'],\n}\n\nexport const oakPlywood = {\n  header: 'Ekplywood',\n  products: [\n    '1-SIDIG HEL- och KVARTSSKIVA (4 mm)',\n    '2-SIDIG HEL- och KVARTSSKIVA (6, 9 och 12 mm)',\n  ],\n}\n\nexport const beechPlywood = {\n  header: 'Bokplywood',\n  products: ['1-SIDIG HEL- och KVARTSSKIVA (4 mm)'],\n}\n\nexport const walnutPlywood = {\n  header: 'Valn√∂tsplywood',\n  products: ['1-SIDIG HEL- och KVARTSSKIVA (4 mm)'],\n}\n","export const introduction =\n  'Nedan f√∂ljer beskrivning och tips om fan√©rlimning. [Punkterna 1 - 5 endast utifall existerande fan√©r f√∂rst m√•ste avl√§gsnas].'\n\nexport const glue = {\n  header: 'Lim',\n  body:\n    'Limning av fan√©r kan i beroende av utsatthet ske med s√•v√§l kontaktlim som tr√§lim. Nedan anges n√•gra l√§mpliga limtyper f√∂r olika anv√§ndningsomr√•den:',\n  usageAreas: [\n    'Skyddade l√§gen (inomhus eller utomhus under tak): Vattenbaserat kontaktlim, alternativt exempelvis Cascol Ute 3337.',\n    \"Oskyddade l√§gen: Icke vattenbaserat 'vanligt' kontaktlim, alternativt exempelvis Cascol Marin 3308.\",\n  ],\n  additionalInfo:\n    'Notera att s√•v√§l kontaktlim som Cascol Marin erfordrar ett h√∂gt presstryck under limningsprocessen.',\n}\n\nexport const fanerRemoval = {\n  header: 'Avl√§gsnandet av befintligt fan√©r',\n  steps: [\n    'Dokumentera √•dringen.',\n    'Hetta upp det gamla fan√©ret med varmluftspistol eller strykj√§rn till ca 90 grader (strykj√§rnet har den f√∂rdelen att man enklare kan reglera temperaturen), avl√§gsna sedan fan√©ret med hj√§lp av (v√§ssad) spackelspade, kniv eller st√§mj√§rn.',\n    'Slipa sedan underlaget j√§mnt med en l√•ngkloss (slippapper f√§st p√• en l√•ng stadig plankbit), f√∂rst diagonalt, d√§refter i l√§ngsled. Slippappret b√∂r inte vara f√∂r fint, utan en viss struktur b√∂r finnas p√• ytan inf√∂r limningen (~ korn 80). Vid st√∂rre oj√§mnheter kan ytan f√∂rst beh√∂va spacklas.',\n    'Kontrollera att underlaget √§r j√§mnt med ett vattenpass eller genom att rita ett antal streck med blyerts p√• ytan och d√§refter slipa l√§ngs ytan med l√•ngkloss. √Ñr ytan j√§mn, f√∂rsvinner samtliga streck under en och samma slipfas.',\n    '√Ñr ytan fortfarande √§r fet (eller om teak), reng√∂r med l√∂sningsmedel (helst aceton i fallet teak)',\n  ],\n}\n\nexport const gluePreparation = {\n  header: 'F√∂rberedelser inf√∂r limning',\n  steps: [\n    'M√§t ut, m√§rk upp och sk√§r till de fanerbitarna du beh√∂ver. F√∂rs√∂k att hitta ett m√∂nster p√• faneret som passar eller √∂verensst√§mmer med det gamla.',\n  ],\n  additionalInfo:\n    'Sk√§r till bitarna s√• att b√•de l√§ngd och bredd √§r n√•gon centimeter st√∂rre √§n ytan till vilket den skall limmas. Vid skarvning (som endast b√∂r ske i l√§ngsled, d√• det skarven annars synns alltf√∂r v√§l) kan bitarna f√∂rst med √∂verlapp passas ihop och tejpas med exempelvis maskeringstejp. D√§refter markers var skarven skall vara och de sammantejpade bitarna v√§nds upp och ned. Skarven sk√§rs sedan genom b√§gge bitarna l√§mpligen med ett nytt blad f√∂rsedd mattkniv l√§ngs en st√•llinjal. (F√∂rdelen med att sk√§ra fan√©rbitarna fr√•n baksidan √§r att sk√§ret bildar ett V och att fogen sett fr√•n framsidan blir t√§tare).',\n}\n\nexport const gluing = {\n  header: 'Limning',\n  steps: [\n    'Maskera f√∂rst ytor d√§r du inte √∂nskar lim med maskeringstejp.',\n    'F√∂rdela lim √∂ver fan√©rarkens baksida och underlag i enlighet med limtillverkarens rekommendationer. Anv√§nd ansiktsmask avsedd f√∂r organiska √•ngor ifall kontaktlim anv√§nds. En fintandad spackelspade kan med f√∂rdel anv√§ndas f√∂r f√∂rdelningen av lim.',\n    '(I fallet kontaktlim) L√•t limmet torka rekommenderad tid (ca 10 minuter).',\n    'Placera nu fan√©rarket f√∂rsiktigt p√• plats. F√∂rs√∂k att stryka eller kavla ut arket fr√•n dess mitt ut mot kanterna (j√§mf√∂r tapetsering). Till detta moment kan med f√∂rdel en (avkapad) tung br√∂dkavel anv√§ndas. Var g√§rna tv√• presoner, d√• det kan vara sv√•rt att s√•v√§l h√•lla som stryka ut arket. Notera att man i fallet kontaktlim endast har en chans p√• sig att placera ut arket korrekt, d√• limmet f√§ster direkt och det d√§refter inte g√•r att lyfta och korrigera placeringen.',\n    'N√§r limmet √§r genomh√§rdat kan eventuella luftbubblor √•tg√§rdas genom att man sk√§r upp bubblan (l√§ngs fiberriktningen) och f√∂rsiktigt f√∂r in epoxilim. Har man tillg√•ng till en kanyl √§r detta mycket enkelt, annars g√•r det ocks√• att anv√§nda exempelvis n√•l eller n√•got annat spetsigt f√∂rem√•l. L√§gg d√§refter en tyngd p√• och l√•t h√§rda.',\n  ],\n}\n\nexport const postProcessing = {\n  header: 'Efterbearbetning',\n  steps: [\n    'Efter det att limmet √§r genomh√§rdat och eventuella bubblor √•tg√§rdade sk√§r man f√∂rsiktigt bort √∂verfl√∂det med en mattkniv eller fan√©rs√•g.',\n  ],\n  additionalInfo:\n    'I fallet mattkniv: anv√§nd g√§rna ett underlag att sk√§ra mot f√∂r att inte sk√§ra f√∂r mycket eller s√• att fan√©ret spricker. D√• tr√§fibrerna sk√§rs tv√§rs fiberriktningen, sk√§r utifr√•n och in f√∂r att f√∂rhibndra att fan√©ret flisar sig. L√§mna n√•gon millimeters √∂verh√§ng vid kanter f√∂r slipslutbearbetning med l√•ngkloss.',\n}\n\nexport const surfaceTreatment = {\n  header: 'Ytbehandling',\n  body:\n    'Fan√©rytan kan ytbehandlas i enlighet med vad som √§r l√§mpligt f√∂r tr√§slaget ifr√•ga. Var dock extra noggrann med ytbehandlingen kanter och h√∂rn, dit annars fukt g√§rna s√∂ker sig. Ifall den fan√©rade detaljen skall uts√§ttas f√∂r v√§der och vind b√∂r den lackas med en t√•lig lack som har UV skydd s√• att den inte gulnar (g√§rna med ett tv√•komponentlack).',\n}\n","import TeakInfo from './TeakInfo.jsx'\nimport MahognyInfo from './MahognyInfo.jsx'\nimport SteamWoodInfo from './SteamWoodInfo.jsx'\nimport PlywoodInfo from './PlywoodInfo.jsx'\nimport FanerInfo from './FanerInfo.jsx'\nimport StainlessInfo from './StainlessInfo.jsx'\n\nconst InfoPages = {\n  Teak: TeakInfo,\n  Mahogny: MahognyInfo,\n  SteamWood: SteamWoodInfo,\n  Plywood: PlywoodInfo,\n  Fan√©r: FanerInfo,\n  Rostfritt: StainlessInfo,\n}\n\nexport default InfoPages\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\nimport {\n  introduction,\n  advantages,\n  production,\n  processing,\n  treatment,\n  products,\n  usageAreas,\n} from '../../assets/strings/SteamWoodInfo'\nimport CenteredImage from './CenteredImage.jsx'\nimport { TextWithMargin, MaroonHeader } from './InfoTexts.jsx'\nimport { RightCircleOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router-dom'\n\nconst SteamWoodInfo = () => {\n  const history = useHistory()\n  const navigateTo = (url) => () => history.replace(url)\n  return (\n    <div>\n      <CenteredImage src='http://www.erlandson-trade.se/images/Askeladden1.jpg' />\n      <TextWithMargin text={introduction} />\n      <MaroonHeader text={advantages.header} />\n      <EtText>{advantages.body}</EtText>\n      <MaroonHeader text={production.header} />\n      {production.paragraphs.map((paragraph, index) => (\n        <EtText style={{ marginTop: index === 0 ? 0 : '0.5em' }} key={index}>\n          {paragraph}\n        </EtText>\n      ))}\n      <MaroonHeader text={processing.header} />\n      <EtText>{processing.body}</EtText>\n      <MaroonHeader text={treatment.header} />\n      <EtText>{treatment.body}</EtText>\n      <MaroonHeader text={products.header} />\n      <div style={{ display: 'flex' }}>\n        <EtText>{products.body}</EtText>\n        <RightCircleOutlined\n          onClick={navigateTo('/varor/steamwood/lister-virke')}\n          style={{ marginLeft: '0.5em', fontSize: '18px', color: '#3498DB' }}\n        />\n      </div>\n      <MaroonHeader text={usageAreas.header} />\n      <EtText>{usageAreas.body}</EtText>\n      <div style={{ marginTop: '1em' }}>\n        {usageAreas.examples.map((example, index) => (\n          <div key={index} style={{ marginBottom: '1em' }}>\n            <CenteredImage src={example.src} />\n            <EtText style={{ textAlign: 'center' }}>\n              <i>{example.title}</i>\n            </EtText>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SteamWoodInfo\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\nimport {\n  introduction,\n  teakPlywood,\n  mahognyPlywood,\n  deckPlywood,\n  durkPlywood,\n  glue,\n  cherryPlywood,\n  oakPlywood,\n  beechPlywood,\n  walnutPlywood,\n} from '../../assets/strings/PlywoodInfo'\nimport { TextWithMargin, MaroonHeader, BulletList } from './InfoTexts.jsx'\nimport { RightCircleOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router-dom'\n\nconst PlywoodInfo = () => {\n  const history = useHistory()\n  const navigateTo = (url) => () => history.replace(url)\n  return (\n    <div>\n      <TextWithMargin text={introduction} />\n      <div style={{ display: 'flex' }}>\n        <MaroonHeader style={{ marginTop: 0 }} text={teakPlywood.header} />\n        <RightCircleOutlined\n          onClick={navigateTo('/varor/plywood/teakplywood')}\n          style={{\n            display: 'flex',\n            alignContent: 'center',\n            marginTop: '0.15em',\n            marginLeft: '0.5em',\n            fontSize: '18px',\n            color: '#3498DB',\n          }}\n        />\n      </div>\n      <BulletList bulletPoints={teakPlywood.products} />\n      <div style={{ display: 'flex' }}>\n        <MaroonHeader style={{ marginTop: 0 }} text={mahognyPlywood.header} />\n        <RightCircleOutlined\n          onClick={navigateTo('/varor/plywood/teakplywood')}\n          style={{\n            display: 'flex',\n            alignContent: 'center',\n            marginTop: '0.15em',\n            marginLeft: '0.5em',\n            fontSize: '18px',\n            color: '#3498DB',\n          }}\n        />\n      </div>\n      <EtText>{mahognyPlywood.meranti}</EtText>\n      <BulletList bulletPoints={mahognyPlywood.merantiProducts} />\n      <EtText>{mahognyPlywood.khaya}</EtText>\n      <BulletList bulletPoints={mahognyPlywood.khayaProducts} />\n      <MaroonHeader text={deckPlywood.header} />\n      <BulletList bulletPoints={deckPlywood.products} />\n      <EtText>{deckPlywood.additionalInfo}</EtText>\n      <MaroonHeader text={durkPlywood.header} />\n      <BulletList bulletPoints={durkPlywood.products} />\n      <EtText>{durkPlywood.additionalInfo}</EtText>\n      <MaroonHeader text={glue.header} />\n      <EtText>{glue.body}</EtText>\n      <MaroonHeader text={cherryPlywood.header} />\n      <BulletList bulletPoints={cherryPlywood.products} />\n      <MaroonHeader text={oakPlywood.header} />\n      <BulletList bulletPoints={oakPlywood.products} />\n      <MaroonHeader text={beechPlywood.header} />\n      <BulletList bulletPoints={beechPlywood.products} />\n      <MaroonHeader text={walnutPlywood.header} />\n      <BulletList bulletPoints={walnutPlywood.products} />\n    </div>\n  )\n}\n\nexport default PlywoodInfo\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\nimport {\n  introduction,\n  glue,\n  fanerRemoval,\n  gluePreparation,\n  gluing,\n  postProcessing,\n  surfaceTreatment,\n} from '../../assets/strings/FanerInfo'\nimport { TextWithMargin, MaroonHeader, BulletList } from './InfoTexts.jsx'\n\nconst FanerInfo = () => (\n  <div>\n    <TextWithMargin text={introduction} />\n    <MaroonHeader style={{ marginBottom: 0 }} text={glue.header} />\n    <EtText>{glue.body}</EtText>\n    <BulletList bulletPoints={glue.usageAreas} />\n    <MaroonHeader style={{ marginBottom: 0 }} text={fanerRemoval.header} />\n    <BulletList bulletPoints={fanerRemoval.steps} numbered />\n    <MaroonHeader style={{ marginBottom: 0 }} text={gluePreparation.header} />\n    <BulletList bulletPoints={gluePreparation.steps} numbered startFrom={6} />\n    <EtText>{gluePreparation.additionalInfo}</EtText>\n    <MaroonHeader style={{ marginBottom: 0 }} text={gluing.header} />\n    <BulletList bulletPoints={gluing.steps} numbered startFrom={7} />\n    <MaroonHeader style={{ marginBottom: 0 }} text={postProcessing.header} />\n    <BulletList bulletPoints={postProcessing.steps} numbered startFrom={6} />\n    <EtText>{postProcessing.additionalInfo}</EtText>\n    <MaroonHeader style={{ marginBottom: 0 }} text={surfaceTreatment.header} />\n    <EtText style={{ marginBottom: '1em' }}>{surfaceTreatment.body}</EtText>\n  </div>\n)\n\nexport default FanerInfo\n","import React from 'react'\nimport EtText from '../../EtText.jsx'\nimport { body } from '../../assets/strings/StainlessInfo'\n\nconst StainlessInfo = () => <EtText>{body}</EtText>\n\nexport default StainlessInfo\n","export const body =\n  'V√•rt rostfria sortiment √§r, om ej annat anges, av elektropolerat syrafast rostfritt st√•l (SS 304). Gjutgods av syrafast SS 316.'\n","import React from 'react'\nimport { Breadcrumb } from 'antd'\nimport EtText from '../EtText.jsx'\n\nconst _toCapitalCase = (s) => s.charAt(0).toUpperCase() + s.substring(1)\n\nconst CategoryBreadcrumb = ({ rootCategory, subCategory }) => {\n  return rootCategory && subCategory ? (\n    <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '1em' }}>\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <EtText style={{ display: 'inline', fontSize: '25px' }}>Varor</EtText>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>\n          <EtText style={{ display: 'inline', fontSize: '25px' }}>\n            {_toCapitalCase(rootCategory)}\n          </EtText>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>\n          <EtText style={{ display: 'inline', fontSize: '25px' }}>\n            {_toCapitalCase(subCategory)}\n          </EtText>\n        </Breadcrumb.Item>\n      </Breadcrumb>\n    </div>\n  ) : null\n}\n\nexport default CategoryBreadcrumb\n","import React from 'react'\nimport { Menu } from 'antd'\nimport { Link } from 'react-router-dom'\nimport EtText from '../EtText.jsx'\nimport CategoryItemsTable from './CategoryItemsTable.jsx'\nimport jsonInventory from '../products/inventory.json'\nimport { getPath, getCategoriesFromPath } from '../products/util'\nimport InfoPages from './info/index'\nimport CategoryBreadcrumb from './CategoryBreadcrumb.jsx'\nconst { SubMenu } = Menu\n\nconst MenuOption = ({ menuText, linkTo, children, ...rest }) => {\n  return children ? (\n    <SubMenu key={menuText} title={menuText} {...rest}>\n      {children}\n    </SubMenu>\n  ) : (\n    <Menu.Item key={menuText} {...rest}>\n      <Link to={linkTo} replace>\n        {menuText}\n      </Link>\n    </Menu.Item>\n  )\n}\n\nconst _generateMenuOptions = () => {\n  return Object.keys(jsonInventory).map((rootCategory) => {\n    return (\n      <MenuOption menuText={<EtText>{rootCategory}</EtText>}>\n        {InfoPages[rootCategory] ? (\n          <MenuOption\n            linkTo={`/varor/${getPath({ rootCategory, subCategory: 'Info' })}`}\n            menuText={<EtText>Info</EtText>}\n          />\n        ) : null}\n        {Object.keys(jsonInventory[rootCategory]).map((subCategory) => {\n          return (\n            <MenuOption\n              linkTo={`/varor/${getPath({ rootCategory, subCategory })}`}\n              menuText={<EtText>{subCategory}</EtText>}\n            />\n          )\n        })}\n      </MenuOption>\n    )\n  })\n}\n\nconst InfoWrapper = ({ children }) => {\n  return <div style={{ marginTop: '1em' }}>{children}</div>\n}\n\nconst Inventory = ({\n  match: {\n    params: { rootCategory: rootCategoryPath, subCategory: subCategoryPath },\n  },\n}) => {\n  const { rootCategory, subCategory } = getCategoriesFromPath({ rootCategoryPath, subCategoryPath })\n  const InfoComponent = InfoPages[rootCategory]\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '0.75em 0',\n      }}\n    >\n      <Menu mode='horizontal'>{_generateMenuOptions()}</Menu>\n      <CategoryBreadcrumb rootCategory={rootCategory} subCategory={subCategory} />\n      {subCategory === 'Info' ? (\n        <InfoWrapper>{<InfoComponent /> || null}</InfoWrapper>\n      ) : (\n        <CategoryItemsTable rootCategory={rootCategory} subCategory={subCategory} />\n      )}\n    </div>\n  )\n}\n\nexport default Inventory\n","export const bodyParagraphs = [\n  'Vi har nu flyttat butik och lager fr√•n Upplands V√§sby upp till Roslagen. Merparten av artiklarna finns fortfarande kvar till f√∂rs√§ljning, dock kommer service kring fr√•gor och best√§llningar inledningsvis vara begr√§nsade.',\n  'Kontakt och best√§llningar kommer under en tid endast ske via email.',\n  'Leveranstiden kommer nu att vara l√§ngre och vi har f√∂r n√§rvarande ingen m√∂jlighet att ta emot bes√∂k. Till en b√∂rjan kommer leveranser endast ske till utvalda utl√§mningsst√§llen, alternativt via paket. St√∂rre kvantiteter kommer att prioriteras.',\n  'Tag g√§rna kontakt via e-mail s√• f√∂rs√∂ker vi besvara er och vara behj√§lpliga s√• snart som m√∂jligt.',\n]\n\nexport const headline =\n  'Erlandson Trade s√§ljer √§deltr√§, plywood, rostfria marina produkter samt f√∂r√§dlade teak- och mahognyprodukter f√∂r hem- och b√•tinredning.'\n","import React from 'react'\nimport EtText from './EtText.jsx'\nimport { Image } from 'antd'\nimport { headline, bodyParagraphs } from './assets/strings/Home'\n\nconst Home = () => {\n  return (\n    <div style={{ padding: '1em 0' }}>\n      <EtText style={{ fontSize: '22px', fontWeight: 575 }}>\n        <i>{headline}</i>\n      </EtText>\n      {bodyParagraphs.map((paragraph, index) => (\n        <EtText key={index} style={{ margin: '1em 0' }}>\n          {paragraph}\n        </EtText>\n      ))}\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\n        <Image\n          preview={false}\n          width={'35%'}\n          src='http://www.erlandsson-trade.se/images/shelf.JPG'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","export const introduction =\n  'Prislistor och broschyrer √§r i pdf-format och √∂ppnas i ett nytt f√∂nster.'\n\nexport const priceLists = {\n  header: 'Prislistor',\n  listItems: [\n    {\n      label: 'Virke, Fan√©r & Plywood',\n      src:\n        'http://www.erlandson-trade.se/price%20lists/PRISLISTA%20VIRKE%20%26%20PLYWOOD%20141024.pdf',\n    },\n    {\n      label: 'Teak inredning',\n      src: 'http://www.erlandson-trade.se/price%20lists/PRISLISTA%20TEAK%20INREDNING%20141024.pdf',\n    },\n    {\n      label: 'Mahogny inredning',\n      src:\n        'http://www.erlandson-trade.se/price%20lists/PRISLISTA%20MAHOGNY%20INREDNING%20141024.pdf',\n    },\n  ],\n}\n\nexport const brochures = {\n  header: 'Broschyrer',\n  listItems: [\n    {\n      label: 'Badplattformar & badstegar (med priser)',\n      src:\n        'http://www.erlandson-trade.se/price%20lists/Broschyr%20Plattformar%20%26%20Stegar%20100224.pdf',\n    },\n  ],\n}\n","import React from 'react'\nimport EtText from './EtText.jsx'\nimport { introduction, priceLists, brochures } from './assets/strings/PriceLists'\nimport { MaroonHeader, BulletList } from './inventory/info/InfoTexts'\nimport { RightCircleOutlined } from '@ant-design/icons'\n\nconst PriceLists = () => {\n  return (\n    <div style={{ marginTop: '0.75em' }}>\n      <EtText>{introduction}</EtText>\n      <MaroonHeader text={priceLists.header} />\n      <BulletList\n        bulletPoints={priceLists.listItems.map((listItem) => (\n          <div style={{ display: 'flex' }}>\n            <EtText style={{ marginTop: 0 }}>{listItem.label}</EtText>\n            <RightCircleOutlined\n              onClick={() => window.open(listItem.src, '_blank')}\n              style={{\n                display: 'flex',\n                alignContent: 'center',\n                marginTop: '0.15em',\n                marginLeft: '0.5em',\n                fontSize: '18px',\n                color: '#3498DB',\n              }}\n            />\n          </div>\n        ))}\n      />\n      <MaroonHeader text={brochures.header} />\n      <BulletList\n        bulletPoints={brochures.listItems.map((listItem) => (\n          <div style={{ display: 'flex' }}>\n            <EtText style={{ marginTop: 0 }}>{listItem.label}</EtText>\n            <RightCircleOutlined\n              onClick={() => window.open(listItem.src, '_blank')}\n              style={{\n                display: 'flex',\n                alignContent: 'center',\n                marginTop: '0.15em',\n                marginLeft: '0.5em',\n                fontSize: '18px',\n                color: '#3498DB',\n              }}\n            />\n          </div>\n        ))}\n      />\n    </div>\n  )\n}\n\nexport default PriceLists\n","import 'antd/dist/antd.css'\nimport React from 'react'\nimport Header from './Header.jsx'\nimport Inventory from './inventory/Inventory.jsx'\nimport Home from './Home.jsx'\nimport PriceLists from './PriceLists.jsx'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div style={{ display: 'flex', flexDirection: 'column', padding: '0 5em' }}>\n        <Switch>\n          <Route path='/varor/:rootCategory?/:subCategory?' component={Inventory} />\n          <Route path='/prislistor'>\n            <PriceLists />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}